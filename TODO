## UNDESTANDING TODO
-[ ] => not implemented
-[!] => implemented
-[x] => tested

##USEFUL TEMPLATES

-[x] iterator_traits
-[x] reverse_iterator
-[x] enable_if
-[x] is_integral
-[ ] equal/lexographical compaire
-[ ] std::pair
-[ ] std::make_pair

## VECTOR TEMPLATE

-[ ] vector_iterator
	- [!] default constructor
	- [!] copy constructor
	- [!] assign operator
	- [!] destructor
	- [!] relational operators
		- [!] operator==
		- [!] operator!=
		- [!] operator<
		- [!] operator<=
		- [!] operator>
		- [!] operator>=
	- [!] compund assignment operators
		- [!] operator +=
		- [!] operator -=
	- [!] incrementable / decrementable
		- [!] ++operator
		- [!] operator++
		- [!] --operator
		- [!] operator--
	- [ ] arithmetic operators
		- [!] operator+ with numerique value
		- [ ] operator+ with another iterator
		- [!] operator- with numerique value
		- [ ] operator- with another iterator
	- [!] operator[]
	- [!] operator*
	- [!] operator->

-[ ] vector
	- [x] default constructor
	- [!] fill constructor
	- [!] range constructor
	- [!] copy constructor
	- [x] destructor
	- [x] operator=
	- [x] begin
		- [x] mutable
		- [x] immutable
	- [x] end
		- [x] mutable
		- [x] immutable
	- [x] rbegin
		- [x] mutable
		- [x] immutable
	- [x] rend
		- [x] mutable
		- [x] immutable
	- [x] size
	- [x] max_size
	- [x] resize
	- [x] capacity
	- [x] empty
	- [!] reserve
	- [x] operator[]
		- [x] mutable
		- [x] immutable
	- [x] at
		- [x] mutable
		- [x] immutable
	- [x] front
		- [x] mutable
		- [x] immutable
	- [x] back
		- [x] mutable
		- [x] immutable
	- [x] assign
		- [x] range
		- [x] fill
	- [!] push_back
	- [!] pop_back
	- [x] insert
		- [x] single element
		- [x] fill
		- [x] range
	- [ ] erase
		- [ ] single element
		- [ ] range
	- [ ] swap
	- [ ] clear
	- [ ] get_allocator
	- [ ] relational operators
		- [ ] operator==
		- [ ] operator!=
		- [ ] operator<
		- [ ] operator<=
		- [ ] operator>
		- [ ] operator>=
	- [ ] swap (vector)

## STACK TEMPLATE

-[ ] stack

## MAP TEMPLATE

-[ ] map


RESOURCES :
	- https://www.cplusplus.com/
	- https://en.cppreference.com/w/
	- https://internalpointers.com/post/writing-custom-iterators-modern-cpp